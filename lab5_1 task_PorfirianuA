#include <iostream>
#include <string>

using namespace std;

// Базовий клас Вікно
class Window {
protected:
    int x1, y1; // координати верхнього лівого кута
    int x2, y2; // координати нижнього правого кута
    string bgColor; // колір тла

public:
    // Конструктори
    Window() : x1(0), y1(0), x2(100), y2(100), bgColor("white") {}
    Window(int x1, int y1, int x2, int y2, string color) 
        : x1(x1), y1(y1), x2(x2), y2(y2), bgColor(color) {}
    
    // Деструктор
    virtual ~Window() {
        cout << "Window destructor called" << endl;
    }
    
    // Функція друку
    virtual void print() const {
        cout << "Window coordinates: (" << x1 << ", " << y1 << ") to (" 
             << x2 << ", " << y2 << ")\n";
        cout << "Background color: " << bgColor << endl;
    }
    
    // Функція зміни кольору тла
    void setBackgroundColor(const string& color) {
        bgColor = color;
    }
};

// Похідний клас Вікно з меню
class WindowWithMenu : public Window {
private:
    string menuText;

public:
    // Конструктори
    WindowWithMenu() : Window(), menuText("File Edit View") {}
    
    WindowWithMenu(int x1, int y1, int x2, int y2, string color, string menu)
        : Window(x1, y1, x2, y2, color), menuText(menu) {}
    
    // Деструктор
    ~WindowWithMenu() override {
        cout << "WindowWithMenu destructor called" << endl;
    }
    
    // Функція друку
    void print() const override {
        Window::print();
        cout << "Menu text: " << menuText << endl;
    }
    
    // Функція зміни тексту меню
    void setMenuText(const string& text) {
        menuText = text;
    }
};

// Функція для тестування
void testWindowClasses() {
    cout << "=== Testing Window class ===" << endl;
    Window w1;
    Window w2(10, 10, 200, 150, "blue");
    
    cout << "\nWindow 1 (default):" << endl;
    w1.print();
    
    cout << "\nWindow 2 (custom):" << endl;
    w2.print();
    
    cout << "\nChanging Window 1 background to green" << endl;
    w1.setBackgroundColor("green");
    w1.print();
    
    cout << "\n=== Testing WindowWithMenu class ===" << endl;
    WindowWithMenu wm1;
    WindowWithMenu wm2(50, 50, 300, 250, "gray", "File Edit View Help");
    
    cout << "\nWindow with menu 1 (default):" << endl;
    wm1.print();
    
    cout << "\nWindow with menu 2 (custom):" << endl;
    wm2.print();
    
    cout << "\nChanging properties of window with menu 1:" << endl;
    wm1.setBackgroundColor("yellow");
    wm1.setMenuText("Home Insert Design Layout");
    wm1.print();
    
    cout << "\nTesting polymorphism:" << endl;
    Window* windows[] = {&w1, &wm1, &w2, &wm2};
    for (Window* win : windows) {
        win->print();
        cout << "--------" << endl;
    }
}

int main() {
    testWindowClasses();
    return 0;
}
